#!/bin/bash

## loopback test ###

export LBTEST_AP_IP=192.168.2.69

## Set your Home here (I`m using an external drive)
export TOPLEVEL=/home/marc/work
export ACME_HOME=$TOPLEVEL/ACME
export ACME_SCRIPTS=$ACME_HOME/scripts
export KERNEL_BUILD=$ACME_HOME/kbuild
export ACME_PATCHES=$ACME_HOME/patches
export KERNEL_SRC=$ACME_HOME/linux
export TFTP_DIR=/var/lib/tftpboot

export ARCH=arm
export CROSS_COMPILE=arm-linux-gnueabi-
export INSTALL_MOD_PATH=/media/marc/Angstrom

mkdir -p $ACME_SCRIPTS

# any of nuttx or phabos
export PATH+=:$ACME_SCRIPTS
export PATH+=:$ACME_HOME/JLink_Linux_V502e_x86_64

## host-side gbsim
alias ccc='cd $ACME_HOME'
alias gdbsvc='JLinkGDBServer -device STM32F417IG'
alias goperf='cd $ACME_HOME/nuttx/misc/tools/ara/loopback-perf'

alias | grep ara

#echo "make -C $ACME_HOME/nuttx/nuttx distclean " > $ACME_SCRIPTS/nuttx-svc
#echo "cd $ACME_HOME/nuttx/nuttx/tools &&  ./configure.sh ara/svc/bdb2a" >> $ACME_SCRIPTS/nuttx-svc
#echo "cd $ACME_HOME/nuttx/nuttx && kconfig-tweak --enable CONFIG_PRIORITY_INHERITANCE" >> $ACME_SCRIPTS/nuttx-svc
#echo "make -C $ACME_HOME/nuttx/nuttx -j 4" >> $ACME_SCRIPTS/nuttx-svc
#echo "cp $ACME_HOME/nuttx/nuttx/nuttx $ACME_BUILD_HOME/svc/nuttx.elf" >> $ACME_SCRIPTS/nuttx-svc


## acme-install
echo "if [ -d $TFTP_DIR ]; then " > $ACME_SCRIPTS/acme-k-install
echo "sudo cp linux zImage $TFTP_DIR" >> $ACME_SCRIPTS/acme-k-install
echo "sudo cp am335x-boneblack.dtb $TFTP_DIR"  >> $ACME_SCRIPTS/acme-k-install
echo "sudo make -C $KERNEL_BUILD_DIR modules_install"  >> $ACME_SCRIPTS/acme-k-install
echo "fi" >> $ACME_SCRIPTS/acme-k-install
echo "sync" >> $ACME_SCRIPTS/acme-k-install


## kprep
echo "mkdir -p $KERNEL_BUILD" > $ACME_SCRIPTS/kprep
echo "make -C $KERNEL_SRC O=$KERNEL_BUILD "  >> $ACME_SCRIPTS/kprep
echo "cp $ACME_PATCHES/acme_linux_defconfig $KERNEL_BUILD/.config" >> $ACME_SCRIPTS/kprep

## kbuild
echo "make -C $KERNEL_BUILD oldconfig "  > $ACME_SCRIPTS/kbuild
echo "make -C $KERNEL_BUILD zImage modules dtbs" >> $ACME_SCRIPTS/kbuild

chmod +x $ACME_SCRIPTS/*






####

#if [ ! -d $ACME_HOME/JLink_Linux_V502e_x86_64 ]
#then
#	echo "Please got to https://www.segger.com/jlink-software.html?step=1&file=JLinkLinuxDEB64_5.2.6"
#	echo "and accept EULA to start download..."
#	echo "you may also need to compile flashrom: make && sudo make install"
#fi

