#!/bin/bash

## loopback test ###

export LBTEST_AP_IP=192.168.2.69

## Set your Home here (I`m using an external drive)
export TOPLEVEL=/home/marc/work
export ACME_HOME=$TOPLEVEL/ACME
export ACME_SCRIPTS=$ACME_HOME/scripts
export KERNEL_BUILD=$ACME_HOME/kbuild
export ACME_PATCHES=$ACME_HOME/patches
export KERNEL_SRC=$ACME_HOME/linux
export TFTP_DIR=/var/lib/tftpboot

export ARCH=arm
export CROSS_COMPILE=arm-linux-gnueabi-
#export INSTALL_MOD_PATH=/media/marc/Angstrom
export INSTALL_MOD_PATH=$ACME_HOME/buildroot/output/images

mkdir -p $ACME_SCRIPTS

# any of nuttx or phabos
export PATH+=:$ACME_SCRIPTS
export PATH+=:$ACME_HOME/JLink_Linux_V502e_x86_64

## host-side gbsim
alias ccc='cd $ACME_HOME'
alias gdbsvc='JLinkGDBServer -device STM32F417IG'
alias goperf='cd $ACME_HOME/nuttx/misc/tools/ara/loopback-perf'

alias | grep ara


## acme-install (buildroot version)
echo "if [ -d $TFTP_DIR ]; then " > $ACME_SCRIPTS/acme-k-install
echo "sudo cp $INSTALL_MOD_PATH/zImage $TFTP_DIR" >> $ACME_SCRIPTS/acme-k-install
echo "sudo cp $INSTALL_MOD_PATH/am335x-boneblack.dtb $TFTP_DIR/dtbs"  >> $ACME_SCRIPTS/acme-k-install
echo "fi" >> $ACME_SCRIPTS/acme-k-install
echo "sync" >> $ACME_SCRIPTS/acme-k-install

## sigrok

#./configure --enable-baylibre-acme --prefix=$INSTALL_MOD_PATH --host=arm-linux-gnueabi

## kprep
echo "mkdir -p $KERNEL_BUILD" > $ACME_SCRIPTS/kprep
echo "make -C $KERNEL_SRC O=$KERNEL_BUILD omap2plus_defconfig"  >> $ACME_SCRIPTS/kprep
echo "cp $ACME_PATCHES/acme_linux_defconfig $KERNEL_BUILD/.config" >> $ACME_SCRIPTS/kprep

## kbuild
echo "make -C $KERNEL_BUILD oldconfig "  > $ACME_SCRIPTS/kbuild
echo "make -C $KERNEL_BUILD zImage modules dtbs" >> $ACME_SCRIPTS/kbuild

###br-prep
#echo 'export CONFIG_="BR2_"' > $ACME_SCRIPTS/br-prep
#echo "export ARCH=$ARCH ; export CROSS_COMPILE=$CROSS_COMPILE" >> $ACME_SCRIPTS/br-prep
#echo "make -C $ACME_HOME/buildroot beaglebone_defconfig" >> $ACME_SCRIPTS/br-prep
#echo "cd $ACME_HOME/buildroot && kconfig-tweak --enable PACKAGE_STRACE" >> $ACME_SCRIPTS/br-prep
#echo "cd $ACME_HOME/buildroot && kconfig-tweak --enable PACKAGE_EUDEV" >> $ACME_SCRIPTS/br-prep
#echo "cd $ACME_HOME/buildroot && kconfig-tweak --enable PACKAGE_EVTEST" >> $ACME_SCRIPTS/br-prep
#echo "cd $ACME_HOME/buildroot && kconfig-tweak --enable PACKAGE_I2C_TOOLS" >> $ACME_SCRIPTS/br-prep
#echo "cd $ACME_HOME/buildroot && kconfig-tweak --disable LINUX_KERNEL" >> $ACME_SCRIPTS/br-prep

chmod +x $ACME_SCRIPTS/*


####

#if [ ! -d $ACME_HOME/JLink_Linux_V502e_x86_64 ]
#then
#	echo "Please got to https://www.segger.com/jlink-software.html?step=1&file=JLinkLinuxDEB64_5.2.6"
#	echo "and accept EULA to start download..."
#	echo "you may also need to compile flashrom: make && sudo make install"
#fi

